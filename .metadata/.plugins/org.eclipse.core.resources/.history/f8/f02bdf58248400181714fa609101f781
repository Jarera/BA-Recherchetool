import java.util.Iterator;

import org.apache.jena.query.Query;
import org.apache.jena.query.QueryExecution;
import org.apache.jena.query.QueryExecutionFactory;
import org.apache.jena.query.QueryFactory;
import org.apache.jena.query.QuerySolution;
import org.apache.jena.query.ResultSet;
import org.apache.jena.query.ResultSetFormatter;
import org.apache.jena.rdf.model.Model;
import org.apache.jena.util.FileManager;

public class Main{
	public static void main(String args[]){
		sparqlTest();
	}
	
	static void sparqlTest(){
		FileManager.get().addLocatorClassLoader(Main.class.getClassLoader());
		//Model model = FileManager.get().loadModel("./beitragsbeschreibung.ttl");
		
		String queryString = 
		"SELECT ?seasons ?gp WHERE {" +
		"dbc:Formula_One_races ?broader ?seasons ." +
		"?seasons ?subect ?gp ." +
		"?gp dbo:firstDriverTeam dbr:Scuderia_Ferrari ." +
		"?gp dbo:secondTeam dbr:Mercedes-Benz_in_Formula_One ." +
		"?gp dbo:thirdTeam dbr:Mercedes-Benz_in_Formula_One . }";
		/*
		"PREFIX page: <http://live.dbpedia.org/page/>" +
		"PREFIX ontology: <http://live.dbpedia.org/ontology/>" +
		"select ?place where {" +
		"page:Tom_Hanks ontology:birthPlace ?place . }";
		*/
		// Für Online SPARQL Endpoint
		Query query = QueryFactory.create(queryString);
		QueryExecution qexec = QueryExecutionFactory.sparqlService("http://live.dbpedia.org/sparql/", query);

		ResultSet results = qexec.execSelect();
		ResultSetFormatter.out(System.out, results, query);
		
		qexec.close();
		
		
		// Für lokale .ttl Datei
				/*
				Query query = QueryFactory.create(queryString);
				QueryExecution qexec = QueryExecutionFactory.create(query, model);
				
				ResultSet results = qexec.execSelect();
				while(results.hasNext()){
					QuerySolution soln = results.nextSolution();
					System.out.println(soln);
				}
				qexec.close();
				*/
	}
}